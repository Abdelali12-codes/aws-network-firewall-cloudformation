Parameters:

  VpcCIDR:
    Description: Please enter the IP range (CIDR notation) for this VPC
    Type: String
    Default: 10.192.0.0/16

  InstanceSubnetCIDR:
    Description: Please enter the IP range (CIDR notation) for the public subnet in the first Availability Zone
    Type: String
    Default: 10.192.11.0/24
    
  FirewallSubnetCIDR:
    Description: Please enter the IP range for the firewall subnet 
    Type: String
    Default: 10.192.12.0/24
    
Resources:
 
    VPC:
      Type: AWS::EC2::VPC
      Properties:
        CidrBlock: !Ref VpcCIDR
        EnableDnsSupport: true
        EnableDnsHostnames: true
        Tags:
          - Key: Name
            Value: !Ref EnvironmentName
  
    InternetGateway:
      Type: AWS::EC2::InternetGateway
      Properties:
        Tags:
          - Key: Name
            Value: !Ref EnvironmentName
  
    InternetGatewayAttachment:
      Type: AWS::EC2::VPCGatewayAttachment
      Properties:
        InternetGatewayId: !Ref InternetGateway
        VpcId: !Ref VPC
        
    InstanceSubnet:
      Type: AWS::EC2::Subnet
      Properties:
        VpcId: !Ref VPC
        AvailabilityZone: !Select [ 0, !GetAZs '' ]
        CidrBlock: !Ref PublicSubnet1CIDR
        MapPublicIpOnLaunch: true
        Tags:
          - Key: Name
            Value: !Sub ${EnvironmentName} Public Subnet (AZ1)

    
    
    FirewallSubnet: # this is where the aws firewall newtork vpc endpoint will reside
        Type: AWS::EC2::Subnet
        Properties:
           VpcId: !Ref VPC 
           AvailabilityZone: !Select [1, !GetAZs '']
           CidrBlock: !Ref FirewallSubnetCIDR
           
            
    InstanceRouteTable:
      Type: AWS::EC2::RouteTable
      Properties:
        VpcId: !Ref VPC
        Tags:
          - Key: Name
            Value: !Sub ${EnvironmentName} Public Routes
            
    FirewallRouteTable:
        Type: AWS::EC2::RouteTable
        Properties:
          VpcId: !Ref VPC
          Tags:
            - Key: Name
              Value: !Sub ${EnvironmentName} Firewall Routes 
              
    GatwayRouteTable:
        Type: AWS::EC2::RouteTable
        Properties:
           VpcId: !Ref VPC
           Tags:
            - Key: Name
              Value: !Sub ${EnvironmentName} Gateway Routes 
              
              
    FirewallRoute:
       Type: AWS::EC2::Route
       Properties:
           RouteTableId: !Ref FirewallRouteTable
           DestinationCidrBlock: 0.0.0.0/0
           GatewayId: !Ref InternetGateway
           
    # aws firewall network
    NetworkFirewallEndpoint:
       Type: AWS::NetworkFirewall::Firewall
       Properties:
          FirewallName: AWSNetworkFirewall
          FirewallPolicyArn: !Ref NetworkFirewallPolicy
          VpcId: !Ref VPC
          SubnetMappings:
            - SubnetId: !Ref FirewallSubnet
          Description: Demo Network Firewall
          Tags:
            - Key: Name
              Value: AWSNetworkFirewall

          
    # aws firewall network policy     
    NetworkFirewallPolicy:
        Type: AWS::NetworkFirewall::FirewallPolicy
        Properties:
          FirewallPolicyName: DemoFirewallPolicy
          FirewallPolicy:
            StatelessDefaultActions:
              - 'aws:forward_to_sfe'
            StatelessFragmentDefaultActions:
              - 'aws:forward_to_sfe'
            StatelessRuleGroupReferences:
              - ResourceArn: !Ref StatelessRuleGroup
                Priority: 100
            StatefulRuleGroupReferences:
              - ResourceArn: !Ref StatefulRuleGroup
          Description: Demo FirewallPolicy
          Tags:
            - Key: Name
              Value: DemoFirewallPolicy
            
    # aws network firewall stateless rule group
    NetworkFirewallStatelessRuleGroup:
        Type: AWS::NetworkFirewall::RuleGroup
        Properties:
          RuleGroupName: StatelessRuleGroup
          Type: STATELESS
          Capacity: 50
          RuleGroup:
            RulesSource:
              StatelessRulesAndCustomActions:
                StatelessRules:
                  - RuleDefinition:
                      MatchAttributes:
                        Sources:
                          - AddressDefinition: 0.0.0.0/0
                        Destinations:
                          - AddressDefinition: 0.0.0.0/0
                      Actions:
                        - aws:forward_to_sfe
                    Priority: 10
                    
    # aws network firewall statefull rule group
    NetworkFirewallStatefulRuleGroup:
        Type: AWS::NetworkFirewall::RuleGroup
        Properties:
          RuleGroupName: StatefulRuleGroup
          Type: STATEFUL
          Capacity: 50
          RuleGroup:
            RulesSource:
              RulesString: >-
                pass http any any -> any any
                (msg: "All traffic is permitted"; sid: 100000; rev:1;)
                
    
    GatwayRoute:
        Type: AWS::EC2::Route
        Properties:
           RouteTableId: !Ref GatwayRouteTable
           DestinationCidrBlock: !Ref InstanceSubnetCIDR
           

    InstanceRoute:
      Type: AWS::EC2::Route
      DependsOn: InternetGatewayAttachment
      Properties:
        RouteTableId: !Ref PublicRouteTable
        DestinationCidrBlock: 0.0.0.0/0
        VpcEndpointId: !Select [1, !Split [":", !Select [0, !GetAtt NetworkFirewallEndpoint.EndpointIds]]]
                        
        
  
    InstanceSubnetRouteTableAssociation:
      Type: AWS::EC2::SubnetRouteTableAssociation
      Properties:
        RouteTableId: !Ref InstanceRouteTable
        SubnetId: !Ref InstanceSubnet
            
    
    FirewallSubnetRouteTableAssociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
         RouteTableId: !Ref FirewallRouteTable
         SubnetId: !Ref FirewallSubnet
    
    EdgeAssociation:
        Type: AWS::EC2::GatewayRouteTableAssociation
        Properties: 
          GatewayId: !Ref InternetGateway
          RouteTableId: !Ref FirewallRouteTable
